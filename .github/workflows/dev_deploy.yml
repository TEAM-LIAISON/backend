name: linkit Dev CI/CD

on:
  pull_request:
    types: [closed]
  workflow_dispatch: # (2). 수동 실행도 가능하도록

env:
  RESOURCE_PATH: ./linkit/src/main/resources/application.yml

jobs:
  build:
    runs-on: ubuntu-latest # (3). OS 환경
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4). 코드 check out

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # (5). 자바 설치
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # (6). 권한 부여

      - name: Set yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.data.redis.host: ${{ secrets.REDIS_HOST }}
          spring.data.redis.port: ${{ secrets.REDIS_PORT }}
          spring.security.oauth2.client.registration.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.kakao.redirect-uri: ${{ secrets.KAKAO_REDIRECT_URL }}
          spring.security.oauth2.client.registration.naver.client-id: ${{ secrets.NAVER_CLIENT_ID }}
          spring.security.oauth2.client.registration.naver.client-secret: ${{ secrets.NAVER_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.naver.redirect-uri: ${{ secrets.NAVER_REDIRECT_URL }}
          spring.security.oauth2.client.registration.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          spring.security.oauth2.client.registration.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          spring.security.oauth2.client.registration.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URL }}
          spring.security.oauth2.client.provider.kakao.token-uri: ${{ secrets.KAKAO_TOKEN_URI }}
          spring.security.oauth2.client.provider.kakao.user-info-uri: ${{ secrets.KAKAO_USER_INFO_URI }}
          spring.security.oauth2.client.provider.naver.token-uri: ${{ secrets.NAVER_TOKEN_URI }}
          spring.security.oauth2.client.provider.naver.user-info-uri: ${{ secrets.NAVER_USER_INFO_URI }}
          spring.security.oauth2.client.provider.google.token-uri: ${{ secrets.GOOGLE_TOKEN_URI }}
          spring.security.oauth2.client.provider.google.user-info-uri: ${{ secrets.GOOGLE_USER_INFO_URI }}
          security.jwt.secret-key: ${{ secrets.SECRET_KEY }}
          security.jwt.access-expiration-time: ${{ secrets.ACCESS_EXPIRATION_TIME }}
          security.jwt.refresh-expiration-time: ${{ secrets.REFRESH_EXPIRATION_TIME }}
          cloud.aws.credentials.access-key: ${{ secrets.AWS_S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_S3_SECRET_KEY }}
          cloud.aws.region.static: ${{ secrets.AWS_REGION }}
          cloud.aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET_NAME }}
          cloud.aws.s3.image-folder: ${{ secrets.AWS_S3_IMAGE_FOLDER_NAME }}
          cloud.aws.s3.file-folder: ${{ secrets.AWS_S3_FILE_FOLDER_NAME }}

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7). build 시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # (8).build 시점의 시간 확보

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash # (9). 확보한 시간 보여주기

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions_dev deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: linkit-server-dev
          environment_name: Linkit-server-dev-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_deployment: false
